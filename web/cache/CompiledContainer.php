<?php
/**
 * This class has been auto-generated by PHP-DI.
 */
class CompiledContainer extends DI\CompiledContainer{
    const METHOD_MAPPING = array (
  'Symfony\\Component\\Routing\\RouteCollection' => 'get1',
  'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver' => 'get2',
  'Yesido\\Controller' => 'get3',
  'Symfony\\Component\\HttpKernel\\Controller\\ControllerResolver' => 'get4',
  'Symfony\\Component\\Routing\\RequestContext' => 'get5',
  'Symfony\\Component\\Routing\\Matcher\\UrlMatcher' => 'get6',
  'subEntry1' => 'get7',
  'subEntry2' => 'get8',
);

    protected function get1()
    {
        return $this->resolveFactory(static function () {
        $routeCollection = new \Symfony\Component\Routing\RouteCollection();

        $routeCollection
            ->add('status', new \Symfony\Component\Routing\Route('/status', ['_controller' => [\Yesido\Controller::class, 'status']]));

        return $routeCollection;
    }, 'Symfony\\Component\\Routing\\RouteCollection');
    }

    protected function get2()
    {
        $object = new Symfony\Component\HttpKernel\Controller\ArgumentResolver(NULL, [
        ]);
        return $object;
    }

    protected function get3()
    {
        $object = new Yesido\Controller();
        return $object;
    }

    protected function get4()
    {
        $object = new Symfony\Component\HttpKernel\Controller\ControllerResolver(NULL);
        return $object;
    }

    protected function get5()
    {
        $object = new Symfony\Component\Routing\RequestContext('', 'GET', 'localhost', 'http', 80, 443, '/', '');
        return $object;
    }

    protected function get7()
    {
        return $this->delegateContainer->get('Symfony\\Component\\Routing\\RouteCollection');
    }

    protected function get8()
    {
        return $this->delegateContainer->get('Symfony\\Component\\Routing\\RequestContext');
    }

    protected function get6()
    {
        $object = new Symfony\Component\Routing\Matcher\UrlMatcher($this->get7(), $this->get8());
        return $object;
    }

}
